<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Utkarsh Shah</title>
    <link>http://utkarshshah.com/blog/</link>
    <description>Recent content in Blogs on Utkarsh Shah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 02 May 2018 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="http://utkarshshah.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploring Relationship Queries with Django</title>
      <link>http://utkarshshah.com/blog/django-queries/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 -0400</pubDate>
      
      <guid>http://utkarshshah.com/blog/django-queries/</guid>
      <description>When creating a Django application, almost all valuable data models take advantage of relations. Often, as projects grow, we need to make complex queries on relationships. To illustrate this, let&amp;rsquo;s use two basic models as examples: Tour and Concert.
class Tour(models.Model): name = models.CharField(max_length=200) class Concert(models.Model): name = = models.CharField(max_length=200) tour = models.ForeignKey(Tour, on_delete=models.CASCADE) start = models.DateTimeField() tix_available = models.BooleanField() This sets up a one-to-many relationship from Tour to Concert and adds some useful information to each Concert - when the show happens and how many tickets are still available.</description>
    </item>
    
    <item>
      <title>A First Post</title>
      <link>http://utkarshshah.com/blog/first/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 -0400</pubDate>
      
      <guid>http://utkarshshah.com/blog/first/</guid>
      <description>Sorry to disappoint! Nothing here about how to make your very own copy of this blog (no cat pictures either!).
Maybe one day, you will come here and find something. But not today.
I should just cover this blog with memes.</description>
    </item>
    
  </channel>
</rss>